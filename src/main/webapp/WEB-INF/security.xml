<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<http use-expressions="true">
		<csrf disabled="true"/>

		<intercept-url pattern="/admin" access="hasAnyRole('ROLE_ADMIN', 'ROLE_QUANLY')" />
		<intercept-url pattern="/admin/user" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/admin/user-edit/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_QUANLY')" />
        <intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_QUANLY')" />
        <intercept-url pattern="/**" access="permitAll()" />
        <access-denied-handler error-page="/403" />
 
        <form-login login-page='/login' login-processing-url="/login"
            default-target-url="/admin" always-use-default-target="false"
            authentication-failure-url="/login?error=loginErr" username-parameter="username"
            password-parameter="password" />
 
        <logout logout-url="/logout" logout-success-url="/admin"
            delete-cookies="JSESSIONID" invalidate-session="true" />
    </http>	
    
    <authentication-manager>
        <!-- authentication from database -->
        <authentication-provider>
           	<password-encoder hash="md5" /> 
            
            <jdbc-user-service data-source-ref="myDataSource"
                users-by-username-query="select username, password, active from user where username = ?"
                authorities-by-username-query="SELECT username, concat('ROLE_',name) AS role FROM user AS u INNER JOIN role AS r ON r.id = u.id_role WHERE username = ?" />
        </authentication-provider>
    </authentication-manager>

</beans:beans> 